---
import { Schema } from "astro-seo-schema"

import type { SelectMovie } from "@/server/db/schema"
import { getRandomNumber } from "@/utils/random"

const randomContentRating = getRandomNumber(5, 10).toString()
const randomReviewCount = getRandomNumber(63, 1000)
const randomRatingValue = getRandomNumber(43, 100).toString()
const randomRatingCount = getRandomNumber(52, 1000)

interface Props {
  movie: Pick<
    SelectMovie,
    "backdrop" | "poster" | "originCountry" | "runtime" | "title" | "createdAt"
  > & {
    overview: string | null
    genres: { title: string | null }[]
  }
}

const { movie } = Astro.props

const { backdrop, overview, poster, originCountry, runtime, title, createdAt } =
  movie
---

<Schema
  item={{
    "@context": "https://schema.org",
    "@type": "Movie",
    name: title,
    contentRating: randomContentRating.toString(),
    duration: runtime?.toString() ?? "",
    dateCreated: createdAt?.toISOString(),
    description: overview ?? title,
    image: poster ?? backdrop ?? "",
    genre: movie.genres.map((genre) => genre.title).join(", "),
    countryOfOrigin: originCountry ?? "",
    aggregateRating: {
      "@type": "AggregateRating",
      ratingValue: randomRatingValue,
      reviewCount: randomReviewCount,
      ratingCount: randomRatingCount,
      bestRating: "100",
      worstRating: "1",
    },
  }}
/>
