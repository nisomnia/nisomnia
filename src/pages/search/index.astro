---
import ArticleCard from "@/components/article/article-card.astro"
import MovieCard from "@/components/movie/movie-card.astro"
import SearchForm from "@/components/search/search-form.astro"
import BreadcrumbSchema from "@/components/seo/breadcrumb-schema.astro"
import TopicCard from "@/components/topic/topic-card.astro"
import MainLayout from "@/layouts/main-layout.astro"
import { api } from "@/trpc/server"

const searchQuery = Astro.url.searchParams.get("query") ?? ""

const articles = await api.article.search({
  language: "id",
  searchQuery,
  limit: 10,
})

const movies = await api.movie.search({
  searchQuery,
  limit: 12,
})

const topics = await api.topic.search({
  language: "id",
  searchQuery,
  limit: 5,
})
---

<MainLayout
  title={searchQuery ? `Hasil pencarian untuk ${searchQuery}` : "Cari"}
  robots="noindex, follow"
  description={`Hasil pencarian untuk ${searchQuery}`}
>
  <div class="space-y-4">
    <div class="space-y-8">
      <SearchForm searchQuery={searchQuery} />
      {
        searchQuery && (
          <h1 class="mb-6 text-2xl font-bold md:text-3xl">
            {`Hasil pencarian: ${searchQuery}`}
          </h1>
        )
      }
      {
        articles.length > 0 && (
          <div>
            <h2 class="mb-4 text-xl font-semibold">Artikel</h2>
            <div class="space-y-3">
              {articles.map((article) => (
                <ArticleCard article={article} />
              ))}
            </div>
          </div>
        )
      }

      {
        movies.length > 0 && (
          <div>
            <h2 class="mb-4 text-xl font-semibold">Film</h2>
            <div class="grid grid-cols-2 gap-4 md:grid-cols-3">
              {movies.map((movie) => (
                <MovieCard movie={movie} />
              ))}
            </div>
          </div>
        )
      }

      {
        topics.length > 0 && (
          <div>
            <h2 class="mb-4 text-xl font-semibold">Topik</h2>
            <div class="space-y-4">
              {topics.map((topic) => (
                <TopicCard topic={topic} />
              ))}
            </div>
          </div>
        )
      }

      {
        articles.length === 0 && movies.length === 0 && topics.length === 0 && (
          <div class="py-10 text-center">
            <p class="text-lg text-gray-600">
              Tidak ada hasil pencarian untuk "{searchQuery}"
            </p>
          </div>
        )
      }
    </div>
  </div>
  <BreadcrumbSchema
    listItems={[
      {
        name: "Cari",
        url: "/search",
      },
      ...(searchQuery
        ? [
            {
              name: `Hasil pencarian untuk ${searchQuery}`,
              url: `/search?query=${searchQuery}`,
            },
          ]
        : []),
    ]}
  />
</MainLayout>
